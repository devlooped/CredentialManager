<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <IsPackable>true</IsPackable>
    <AssemblyName>Devlooped.CredentialManager</AssemblyName>
    <RootNamespace>GitCredentialManager</RootNamespace>
    <PackageTags>cross-platform xplat credentials manager</PackageTags>
    <PackageProjectUrl>https://clarius.org/CredentialManager</PackageProjectUrl>
    <Description>Packages the Git Credential Manager cross-platform implementation for Windows, macOS and Linux for use as a generic credential store.
    
Usage: 

   var store = CredentialManager.Create();
</Description>
  </PropertyGroup>  
    
  <ItemGroup>
    <PackageReference Include="NuGetizer" Version="1.2.1" PrivateAssets="all" />
    <PackageReference Include="ILRepack" Version="2.0.33" Pack="false" />
    <PackageReference Include="System.Security.Cryptography.ProtectedData" Version="8.0.0" />
    <PackageReference Include="System.Text.Json" Version="8.0.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Core\Core.csproj" Pack="false" />
  </ItemGroup>

  <Target Name="ILRepack" BeforeTargets="CopyFilesToOutputDirectory" 
          Inputs="@(IntermediateAssembly -&gt; '%(FullPath)')" 
          Outputs="$(IntermediateOutputPath)ilrepack.txt" 
          Returns="@(MergedAssemblies)" 
          Condition="$(OS) == 'WINDOWS_NT' And Exists(@(IntermediateAssembly -&gt; '%(FullPath)'))">
    <Message Text="Repacking" Importance="high" />
    <ItemGroup>
      <MergedAssemblies Include="@(ReferencePath)" Condition="'%(Extension)' == '.dll' And $([MSBuild]::ValueOrDefault('%(FileName)', '')) == 'Core'" />
    </ItemGroup>
    <PropertyGroup>
      <ILRepackArgs>$(ILRepackArgs) /out:"@(IntermediateAssembly -&gt; '%(FullPath)')"</ILRepackArgs>
      <ILRepackArgs>$(ILRepackArgs) "@(IntermediateAssembly -&gt; '%(FullPath)')"</ILRepackArgs>
      <ILRepackArgs>$(ILRepackArgs) @(MergedAssemblies -&gt; '"%(FullPath)"', ' ')</ILRepackArgs>
    </PropertyGroup>
    <Exec Command='"$(ILRepack)" /internalize:exclude.txt $(ILRepackArgs)' StandardErrorImportance="high" StandardOutputImportance="low" ConsoleToMSBuild="true" ContinueOnError="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="ILRepackOutput" />
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>
    <Message Importance="high" Text="$(ILRepackOutput)" Condition="'$(ExitCode)' != '0'" />
    <Delete Files="$(IntermediateOutputPath)ilrepack.txt" Condition="'$(ExitCode)' != '0'" />
    <Touch AlwaysCreate="true" Files="$(IntermediateOutputPath)ilrepack.txt" Condition="'$(ExitCode)' == '0'" />
    <Error Text="$(ILRepackOutput)" Condition="'$(ExitCode)' != '0' And '$(ContinueOnError)' != 'true'" />
    <ItemGroup>
      <MergedAssembliesToRemove Include="@(MergedAssemblies)" />
      <MergedAssembliesToRemove Remove="@(ReferenceToPreserve)" />
    </ItemGroup>
    <Delete Files="@(MergedAssembliesToRemove -&gt; '$(MSBuildProjectDirectory)\$(OutputPath)%(Filename)%(Extension)')" 
            Condition="Exists('$(MSBuildProjectDirectory)\$(OutputPath)%(Filename)%(Extension)')" />
  </Target>

</Project>
